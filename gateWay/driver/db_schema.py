# Define a version number for the database generated by these writers
# Increment this version number any time a change is made to the schema of the
# assets database
# NOTE: When upgrading this remember to add a downgrade in:
# .asset_db_migrations
ASSET_DB_VERSION = 7
# A frozenset of the names of all tables in the assets db
# NOTE: When modifying this schema, update the ASSET_DB_VERSION value
import sqlalchemy as sa

engine_path = 'mysql+pymysql://root:macpython@localhost:3306/spider'
engine = sa.create_engine(engine_path)
metadata = sa.MetaData(bind = engine)

equity_price = sa.Table(
    'equity_price',
    metadata,
    sa.Column('trade_dt',
            sa.String(10),
            nullable=False,
            primary_key=True,
    ),
    sa.Column(
        'sid',
        sa.String(10),
        sa.ForeignKey(equity_basics.c.sid),
        nullable = False,
        primary_key=True,
    ),
    sa.Column('open',sa.Numeric(10,2),nullable = False),
    sa.Column('high', sa.Numeric(10, 2), nullable=False),
    sa.Column('low', sa.Numeric(10, 2), nullable=False),
    sa.Column('close', sa.Numeric(10, 2), nullable=False),
    sa.Column('volume', sa.Numeric(10, 2),nullable = False),
    sa.Column('amount', sa.Numeric(20,0), nullable=False),
    sa.Column('pct', sa.Numeric(20, 2), nullable=False),
)



bond_price = sa.Table(
    'bond_price',
    metadata,
    sa.Column(
        'bond_id',
        sa.String(10),
        sa.ForeignKey(bond_basics.c.bond_id),
        nullable=False,
        primary_key=True,
    ),
    sa.Column(
        'sid',
        sa.String(10),
        sa.ForeignKey(equity_price.c.sid),
        nullable=False),
    sa.Column('trade_dt', sa.String(10), primary_key=True,nullable=False),
    sa.Column('open',sa.String(10,2),nullable=False),
    sa.Column('high', sa.String(10, 2),nullable=False),
    sa.Column('low', sa.String(10, 2),nullable=False),
    sa.Column('close', sa.String(10, 2),nullable=False),
    sa.Column('volume', sa.String(20, 0),nullable=False),
    sa.Column('amount', sa.String(20, 2),nullable=False),
)

fund_price = sa.Table(
    'fund_price',
    metadata,
    sa.Column(
        'id',
        sa.Integer,
        unique=True,
        nullable=False,
        primary_key=True,
    ),
    sa.Column('sid',
        sa.String(10),
        nullable=False,
        index=True,
    ),
    sa.Column('trade_dt',sa.String(10),primary_key=True,nullable=False),
    sa.Column('open', sa.Numeric(10,2), nullable=False),
    sa.Column('high', sa.Numeric(10,2), nullable=False),
    sa.Column('low', sa.Numeric(10,2), nullable=False),
    sa.Column('close', sa.Numeric(10,2), nullable=False),
    sa.Column('volume', sa.Numeric(10,0), nullable=False),
    sa.Column('amount', sa.Numeric(20,2), nullable=False),
)

# declared_date : 公告日期 ; record_date : 登记日 ; pay_date : 除权除息日 ,effective_date :上市日期
# 股权登记日后的下一个交易日就是除权日或除息日，这一天购入该公司股票的股东不再享有公司此次分红配股
# 红股上市日指上市公司所送红股可上市交易（卖出）的日期。上交所证券的红股上市日为股权除权日的下一个交易日；深交所证券的红股上市日为股权登记日后的第3个交易日。

equity_splits = sa.Table(
    'equity_splits',
    metadata,
    sa.Column(
        'sid',
        sa.String(10),
        sa.ForeignKey(equity_price.c.sid),
        nullable=False,
        primary_key=True,
    ),
    sa.Column('declared_date', sa.String(10), primary_key =True),
    sa.Column('ex_date',sa.String),
    sa.Column('pay_date',sa.String),
    sa.Column('effective_date', sa.String),
    sa.Column('sid_bonus',sa.Integer),
    sa.Column('sid_transfer', sa.Integer),
    sa.Column('bonus',sa.Numeric(5,2)),
    sa.Column('progress',sa.Text),
)

#配股
equity_rights = sa.Table(
    'equity_rights',
    metadata,
    sa.Column(
        'sid',
        sa.Integer,
        sa.ForeignKey(equity_price.c.sid),
        nullable=False,
        primary_key=True,
    ),
    sa.Column('declared_date', sa.String(10), primary_key=True),
    sa.Column('ex_date', sa.String(10)),
    sa.Column('pay_date', sa.String(10)),
    sa.Column('effective_date', sa.String),
    sa.Column('rights_bonus', sa.Integer),
    sa.Column('rights_price', sa.Numeric(5, 2)),
)

#股权结构
equity_structure = sa.Table(
    'equity_structure',
    metadata,
    sa.Column(
        'sid',
        sa.String(10),
        sa.ForeignKey(equity_price.c.sid),
        nullable=False,
    ),
    sa.Column('declared_date', sa.String(10)),
    sa.Column('effective_day', sa.String(10)),
    sa.Column('general', sa.Numeric(15,5)),
    sa.Column('float', sa.Numeric(15,5)),
    sa.Column('strict', sa.Numeric(15,5)),
    sa.Column('bfloat', sa.Numeric(15,5)),
    sa.Column('bstrict', sa.Numeric(15,5)),
    sa.Column('hfloat', sa.Numeric(15,5)),
)

#流通市值
equity_mcap = sa.Table(
    'equity_mcap',
    metadata,
    sa.Column(
        'sid',
        sa.Integer,
        sa.ForeignKey(equity_price.c.sid),
        unique=True,
        nullable=False,
        primary_key=True,
    ),
    sa.Column('trade_dt', sa.String(10),nullable=False),
    sa.Column('mkv', sa.Numeric(15,5),nullable=False),
    sa.Column('mkv_cap', sa.Numeric(15,5),nullable=False),
    sa.Column('mkv_strict', sa.Numeric(15,5), nullable=False),
)

#股东增减持
shareholder = sa.Table(
    'shareholder',
    metadata,
    sa.Column(
        'sid',
        sa.Integer,
        sa.ForeignKey(equity_price.c.sid),
        nullable=False,
        primary_key=True,
    ),
    sa.Column('股东', sa.Text),
    sa.Column('方式', sa.String(20)),
    sa.Column('变动股本', sa.Numeric(10, 5), nullable=False),
    sa.Column('总持仓', sa.Numeric(10, 5), nullable=False),
    sa.Column('占总股本比', sa.Numeric(10, 5), nullable=False),
    sa.Column('总流通股', sa.Numeric(10, 5), nullable=False),
    sa.Column('占流通比', sa.Numeric(10, 5), nullable=False),
    sa.Column('declared_date', sa.String(10))
)

#解禁数据
release = sa.Table(
    'release',
    metadata,
    sa.Column(
        'sid',
        sa.Integer,
        sa.ForeignKey(equity_price.c.sid),
        nullable=False,
        primary_key=True,
    ),
    # sa.Column('release_date', sa.String(10), nullable=False),
    sa.Column('declared_date', sa.String(10), nullable=False),
    sa.Column('release_type', sa.Text, nullable=False),
    sa.Column('cjeltszb', sa.Numeric(10, 5), nullable=False),
)

#股东大宗交易
massive = sa.Table(
    'massive',
    metadata,
    sa.Column(
        'sid',
        sa.Integer,
        sa.ForeignKey(equity_price.c.sid),
        nullable=False,
        primary_key=True,
    ),
    sa.Column('declared_date', sa.String(10), nullable=False),
    sa.Column('bid_price', sa.Text, nullable=False),
    sa.Column('discount', sa.Text, nullable=False),
    sa.Column('bid_volume', sa.Numeric(10, 5), nullable=False),
    sa.Column('buyer', sa.Text, nullable=False),
    sa.Column('seller', sa.Text, nullable=False),
    sa.Column('cleltszb', sa.Numeric(10, 5), nullable=False),
)

#版本
version_info = sa.Table(
    'version_info',
    metadata,
    sa.Column(
        'id',
        sa.Integer,
        unique=True,
        nullable=False,
        primary_key=True,
    ),
    sa.Column(
        'version',
        sa.Integer,
        unique=True,
        nullable=False,
    ),
    # This constraint ensures a single entry in this table
    sa.CheckConstraint('id <= 1'),
)

asset_db_table_names = frozenset(['equity_price','bond_price','fund_price','equity_splits',
                                  'equity_rights','equity_structure','equity_mcap',
                                  'shareholder','release','massive','version_info'])